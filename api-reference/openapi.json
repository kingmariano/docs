{
    "openapi": "3.0.1",
    "info": {
        "title": "Omnicron API Endpoint",
        "description": "Get familiar with all the endpoints and parameters. For more details on parameters, visit [Groq Cloud](http://groq.cloud).",
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:9000/api/v1",
            "description": "development server pointing to port 9000"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "paths": {
        "/groq/chatcompletion": {
            "post": {
                "description": "Sends a request for chat completions.",
                "requestBody": {
                    "description": "Chat completion request payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatCompletionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful chat completion response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatCompletionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ChatCompletionRequest": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "description": "Array of messages to send to the chat model.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the message sender (e.g., 'user' or 'assistant')."
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The content of the message."
                                }
                            },
                            "required": [
                                "role",
                                "content"
                            ]
                        }
                    },
                    "model": {
                        "type": "string",
                        "description": "The model to use for chat completion."
                    },
                    "stream": {
                        "type": "boolean",
                        "description": "Whether to stream the response or not."
                    }
                },
                "required": [
                    "messages",
                    "model"
                ]
            },
            "ChatCompletionResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the chat completion."
                    },
                    "object": {
                        "type": "string",
                        "description": "The object type, typically 'chat.completion'."
                    },
                    "created": {
                        "type": "integer",
                        "description": "Timestamp of when the chat completion was created."
                    },
                    "model": {
                        "type": "string",
                        "description": "The model used for the chat completion."
                    },
                    "system_fingerprint": {
                        "type": "string",
                        "nullable": true,
                        "description": "System fingerprint, if available."
                    },
                    "choices": {
                        "type": "array",
                        "description": "List of completion choices.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "index": {
                                    "type": "integer",
                                    "description": "Index of the choice."
                                },
                                "message": {
                                    "type": "object",
                                    "properties": {
                                        "role": {
                                            "type": "string",
                                            "description": "Role of the message sender (e.g., 'assistant')."
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "Content of the completion message."
                                        }
                                    },
                                    "required": [
                                        "role",
                                        "content"
                                    ]
                                },
                                "finish_reason": {
                                    "type": "string",
                                    "description": "Reason for the completion finish."
                                },
                                "logprobs": {
                                    "type": "object",
                                    "nullable": true,
                                    "description": "Log probabilities of the tokens."
                                }
                            },
                            "required": [
                                "index",
                                "message",
                                "finish_reason"
                            ]
                        }
                    },
                    "usage": {
                        "type": "object",
                        "properties": {
                            "prompt_tokens": {
                                "type": "integer",
                                "description": "Number of tokens in the prompt."
                            },
                            "completion_tokens": {
                                "type": "integer",
                                "description": "Number of tokens in the completion."
                            },
                            "total_tokens": {
                                "type": "integer",
                                "description": "Total number of tokens."
                            },
                            "prompt_time": {
                                "type": "number",
                                "format": "float",
                                "description": "Time taken for the prompt in seconds."
                            },
                            "completion_time": {
                                "type": "number",
                                "format": "float",
                                "description": "Time taken for the completion in seconds."
                            },
                            "total_time": {
                                "type": "number",
                                "format": "float",
                                "description": "Total time taken in seconds."
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created",
                    "model",
                    "choices",
                    "usage"
                ]
            },
            "Error": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error message."
                    }
                },
                "required": [
                    "error"
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}